basePath: /api/v1
definitions:
  dto.AuthorResponse:
    properties:
      display_name:
        type: string
      id:
        type: string
    type: object
  dto.CreateReviewForNewStoreRequest:
    properties:
      content:
        type: string
      rating:
        maximum: 5
        minimum: 0
        type: number
      store_address:
        type: string
      store_name:
        type: string
      title:
        type: string
    required:
    - content
    - rating
    - store_address
    - store_name
    - title
    type: object
  dto.CreateReviewRequest:
    properties:
      content:
        type: string
      rating:
        maximum: 5
        minimum: 0
        type: number
      title:
        type: string
    required:
    - content
    - rating
    - title
    type: object
  dto.CreateStoreRequest:
    properties:
      address:
        type: string
      category:
        type: string
      description:
        type: string
      name:
        type: string
      phone:
        type: string
    required:
    - address
    - name
    type: object
  dto.ImageResponse:
    properties:
      id:
        type: string
      url:
        type: string
    type: object
  dto.ReviewResponse:
    properties:
      author:
        $ref: '#/definitions/dto.AuthorResponse'
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/dto.ImageResponse'
        type: array
      rating:
        type: number
      title:
        type: string
      updated_at:
        type: string
    type: object
  dto.StoreResponse:
    properties:
      address:
        type: string
      average_rating:
        type: number
      category:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      total_reviews:
        type: integer
    type: object
  dto.UpdateReviewRequest:
    properties:
      content:
        type: string
      rating:
        maximum: 5
        minimum: 0
        type: number
      title:
        type: string
    type: object
  models.Review:
    properties:
      author:
        $ref: '#/definitions/models.User'
      author_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      images:
        items:
          $ref: '#/definitions/models.ReviewImage'
        type: array
      rating:
        type: number
      rejection_reason:
        type: string
      status:
        $ref: '#/definitions/models.ReviewStatus'
      store:
        $ref: '#/definitions/models.Store'
      store_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.ReviewImage:
    properties:
      created_at:
        type: string
      id:
        type: string
      review_id:
        type: string
      storage_key:
        type: string
      url:
        type: string
    type: object
  models.ReviewStatus:
    enum:
    - pending
    - approved
    - rejected
    type: string
    x-enum-varnames:
    - ReviewStatusPending
    - ReviewStatusApproved
    - ReviewStatusRejected
  models.Store:
    properties:
      address:
        type: string
      auto_created:
        type: boolean
      average_rating:
        type: number
      category:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      rejection_reason:
        type: string
      status:
        $ref: '#/definitions/models.StoreStatus'
      total_reviews:
        type: integer
      updated_at:
        type: string
    type: object
  models.StoreStatus:
    enum:
    - pending
    - approved
    - rejected
    type: string
    x-enum-varnames:
    - StoreStatusPending
    - StoreStatusApproved
    - StoreStatusRejected
  models.User:
    properties:
      created_at:
        type: string
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  problem.Details:
    properties:
      detail:
        type: string
      instance:
        type: string
      status:
        type: integer
      title:
        type: string
      type:
        type: string
    type: object
  services.Pagination:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  services.ReviewListResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.ReviewResponse'
        type: array
      pagination:
        $ref: '#/definitions/services.Pagination'
    type: object
  services.StoreListResult:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.StoreResponse'
        type: array
      pagination:
        $ref: '#/definitions/services.Pagination'
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 这是一个简单的校园点评网站的后端 API 文档。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 杭电点评 API
  version: "1.0"
paths:
  /admin/reviews/{id}:
    delete:
      description: 永久删除指定 ID 的点评及其关联的图片。
      parameters:
      - description: 点评 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 删除成功
        "400":
          description: 无效的点评 ID
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 点评不存在
          schema:
            $ref: '#/definitions/problem.Details'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 删除点评
      tags:
      - 管理
  /admin/reviews/{id}/approve:
    put:
      description: 将指定 ID 的点评状态标记为“已批准”。
      parameters:
      - description: 点评 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 批准成功
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: 无效的点评 ID 或状态错误
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 点评不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 批准点评
      tags:
      - 管理
  /admin/reviews/{id}/reject:
    put:
      consumes:
      - application/json
      description: 将指定 ID 的点评状态标记为“已拒绝”，并记录原因。
      parameters:
      - description: 点评 ID
        in: path
        name: id
        required: true
        type: string
      - description: 拒绝原因
        in: body
        name: body
        required: true
        schema:
          properties:
            reason:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 拒绝成功
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: 无效的点评 ID 或请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 点评不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 拒绝点评
      tags:
      - 管理
  /admin/reviews/pending:
    get:
      description: 获取等待管理员审核的点评列表，支持分页、搜索和排序。
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 搜索关键词
        in: query
        name: query
        type: string
      - default: created_at
        description: 排序字段 (created_at, rating)
        enum:
        - created_at
        - rating
        in: query
        name: sort
        type: string
      - default: desc
        description: 排序顺序 (asc, desc)
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ReviewListResult'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 待审核点评列表
      tags:
      - 管理
  /admin/stores:
    post:
      consumes:
      - application/json
      description: 管理员直接创建一个已审核通过的店铺。
      parameters:
      - description: 店铺信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateStoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/dto.StoreResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "409":
          description: 店铺已存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 创建新店铺
      tags:
      - 管理员 - 店铺
  /admin/stores/{id}:
    delete:
      description: 管理员删除指定的店铺（包含关联的评价和图片记录）。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 删除成功
        "404":
          description: 店铺不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 删除店铺
      tags:
      - 管理员 - 店铺
  /admin/stores/{id}/approve:
    put:
      consumes:
      - application/json
      description: 管理员审核通过指定的店铺。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新后的店铺
          schema:
            $ref: '#/definitions/models.Store'
        "400":
          description: 店铺已被处理
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 店铺不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 审核通过店铺
      tags:
      - 管理员 - 店铺
  /admin/stores/{id}/reject:
    put:
      consumes:
      - application/json
      description: 管理员驳回指定的店铺并填写原因。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      - description: 驳回原因
        in: body
        name: body
        required: true
        schema:
          properties:
            reason:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新后的店铺
          schema:
            $ref: '#/definitions/models.Store'
        "400":
          description: 店铺已被处理
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 店铺不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 驳回店铺
      tags:
      - 管理员 - 店铺
  /admin/stores/pending:
    get:
      description: 获取待审核的店铺列表，支持分页。
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.StoreListResult'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 待审核店铺列表
      tags:
      - 管理员 - 店铺
  /auth/login:
    post:
      consumes:
      - application/json
      description: 接收用户邮箱和密码进行登录，成功后返回认证信息。
      parameters:
      - description: 登录信息
        in: body
        name: body
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            properties:
              access_token:
                type: string
              refresh_token:
                type: string
              user:
                properties:
                  created_at:
                    type: string
                  display_name:
                    type: string
                  email:
                    type: string
                  id:
                    type: integer
                  role:
                    type: string
                type: object
            type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "401":
          description: 邮箱或密码错误
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 用户登录
      tags:
      - 认证
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 接收刷新令牌并使其失效。
      parameters:
      - description: 刷新令牌
        in: body
        name: body
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "204":
          description: 登出成功
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "401":
          description: 无效的刷新令牌
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 用户登出
      tags:
      - 认证
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: 使用有效的刷新令牌获取新的访问令牌和刷新令牌。
      parameters:
      - description: 刷新令牌
        in: body
        name: body
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功
          schema:
            properties:
              access_token:
                type: string
              refresh_token:
                type: string
              user:
                properties:
                  created_at:
                    type: string
                  display_name:
                    type: string
                  email:
                    type: string
                  id:
                    type: integer
                  role:
                    type: string
                type: object
            type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "401":
          description: 无效的刷新令牌
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 刷新令牌
      tags:
      - 认证
  /auth/register:
    post:
      consumes:
      - application/json
      description: 接收用户邮箱、密码和昵称进行注册，成功后返回认证信息。
      parameters:
      - description: 注册信息
        in: body
        name: body
        required: true
        schema:
          properties:
            display_name:
              type: string
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: 注册成功
          schema:
            properties:
              access_token:
                type: string
              refresh_token:
                type: string
              user:
                properties:
                  created_at:
                    type: string
                  display_name:
                    type: string
                  email:
                    type: string
                  id:
                    type: integer
                  role:
                    type: string
                type: object
            type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "409":
          description: 邮箱已被占用
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 用户注册
      tags:
      - 认证
  /reviews:
    get:
      description: 获取已审核通过的点评列表，支持分页、搜索和排序。
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 搜索关键词
        in: query
        name: query
        type: string
      - default: created_at
        description: 排序字段 (created_at, rating)
        enum:
        - created_at
        - rating
        in: query
        name: sort
        type: string
      - default: desc
        description: 排序顺序 (asc, desc)
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ReviewListResult'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 公开点评列表
      tags:
      - 点评
  /reviews/{id}:
    get:
      description: 根据 ID 获取单个点评的详细信息。未审核的点评仅作者和管理员可见。
      parameters:
      - description: 点评 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReviewResponse'
        "400":
          description: 无效的点评 ID
          schema:
            $ref: '#/definitions/problem.Details'
        "403":
          description: 无权访问
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 点评不存在
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 获取点评详情
      tags:
      - 点评
  /reviews/{id}/images:
    post:
      consumes:
      - multipart/form-data
      description: 为指定的点评上传一张图片。用户只能为自己的点评上传。
      parameters:
      - description: 点评 ID
        in: path
        name: id
        required: true
        type: string
      - description: 图片文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: 上传成功
          schema:
            $ref: '#/definitions/models.ReviewImage'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/problem.Details'
        "403":
          description: 无权操作
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 点评不存在
          schema:
            $ref: '#/definitions/problem.Details'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 上传点评图片
      tags:
      - 点评
  /stores:
    get:
      description: 根据多种条件搜索已审核通过的店铺，支持分页、排序和过滤。
      parameters:
      - description: 搜索关键词 (名称或地址)
        in: query
        name: q
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 排序字段 (e.g., -created_at, average_rating)
        in: query
        name: sort
        type: string
      - description: 店铺分类
        in: query
        name: category
        type: string
      - description: 店铺状态 (仅管理员可用)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.StoreListResult'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 搜索店铺
      tags:
      - 店铺
    post:
      consumes:
      - application/json
      description: 用户创建一个新的店铺，需要等待管理员审核。
      parameters:
      - description: 店铺信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateStoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/dto.StoreResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "409":
          description: 店铺已存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 创建新店铺
      tags:
      - 店铺
  /stores/{id}:
    get:
      description: 根据 ID 获取单个店铺的详细信息。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 店铺详情
          schema:
            $ref: '#/definitions/dto.StoreResponse'
        "400":
          description: 无效的店铺 ID
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 店铺不存在
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 获取店铺详情
      tags:
      - 店铺
  /stores/{id}/reviews:
    get:
      description: 获取指定店铺下所有已审核通过的评价。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ReviewListResult'
        "400":
          description: 无效的店铺 ID
          schema:
            $ref: '#/definitions/problem.Details'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      summary: 获取店铺的评价列表
      tags:
      - 店铺
    post:
      consumes:
      - application/json
      description: 为指定店铺提交一条新评价。支持通过 `?autoCreate=true` 在评价时自动创建不存在的店铺。该接口支持通过 `Idempotency-Key`
        请求头实现幂等性。
      parameters:
      - description: 店铺 ID (当 autoCreate=false 时)
        in: path
        name: id
        required: true
        type: string
      - description: 是否在店铺不存在时自动创建
        in: query
        name: autoCreate
        type: boolean
      - description: 幂等键 (UUID)，用于防止重复提交
        in: header
        name: Idempotency-Key
        type: string
      - description: 评价内容 (当 autoCreate=false)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReviewRequest'
      - description: 评价和新店铺信息 (当 autoCreate=true)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReviewForNewStoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/dto.ReviewResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/problem.Details'
        "409":
          description: 用户已评价过该店铺
          schema:
            $ref: '#/definitions/problem.Details'
        "429":
          description: 请求正在处理中
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 提交店铺评价
      tags:
      - 店铺
  /stores/{id}/reviews/{reviewId}:
    delete:
      description: 删除用户对指定店铺的评价。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      - description: 评价 ID
        in: path
        name: reviewId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: 删除成功
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/problem.Details'
        "403":
          description: 无权操作
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 评价不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 删除店铺评价
      tags:
      - 店铺
    patch:
      consumes:
      - application/json
      description: 更新用户对指定店铺的评价。
      parameters:
      - description: 店铺 ID
        in: path
        name: id
        required: true
        type: string
      - description: 评价 ID
        in: path
        name: reviewId
        required: true
        type: string
      - description: 要更新的评价内容
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/dto.ReviewResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/problem.Details'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/problem.Details'
        "403":
          description: 无权操作
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 评价不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 更新店铺评价
      tags:
      - 店铺
  /users/me:
    get:
      description: 获取当前已认证用户的详细信息。
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            properties:
              created_at:
                type: string
              display_name:
                type: string
              email:
                type: string
              id:
                type: integer
              role:
                type: string
            type: object
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/problem.Details'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - 用户
  /users/me/reviews:
    get:
      description: 获取当前认证用户提交的所有点评列表，支持分页、搜索和排序。
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 排序字段 (e.g., -created_at, rating)
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ReviewListResult'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/problem.Details'
      security:
      - ApiKeyAuth: []
      summary: 我的点评列表
      tags:
      - 用户
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
